import io.gitlab.arturbosch.detekt.Detekt
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id "org.springframework.boot" version "2.6.3"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "org.jetbrains.kotlin.jvm" version "1.6.10"
    id "org.jetbrains.kotlin.plugin.spring" version "1.6.10"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.6.10"
    id "io.gitlab.arturbosch.detekt" version "1.19.0"
    id "jacoco"
    id "org.jetbrains.dokka" version "1.5.31"
}

group = "org.darkSolace"
version = "0.0.1-SNAPSHOT"
def spring_version = "2.6.4"
def kotlin_version = "1.6.10"
def junit_version = "5.8.2"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${spring_version}"
    implementation "org.springframework.boot:spring-boot-starter-security:${spring_version}"
    implementation "org.springframework.boot:spring-boot-starter-web:${spring_version}"
    implementation "io.jsonwebtoken:jjwt-api:0.11.2"
    developmentOnly "org.springframework.boot:spring-boot-devtools:${spring_version}"
    runtimeOnly "org.postgresql:postgresql:42.3.3"
    runtimeOnly "org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.2"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.2"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${spring_version}"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${spring_version}"
    testImplementation "org.junit.jupiter:junit-jupiter:${junit_version}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junit_version}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junit_version}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junit_version}"
    testImplementation "org.junit.platform:junit-platform-commons:1.8.2"
    testImplementation "org.junit.platform:junit-platform-engine:1.8.2"
    testImplementation "org.springframework.security:spring-security-test:5.6.2"
    testImplementation "org.testcontainers:junit-jupiter:1.16.3"
    testImplementation "org.testcontainers:postgresql:1.16.3"
    testImplementation "org.apache.httpcomponents:httpclient:4.5.13"
    dokkaHtmlPlugin "org.jetbrains.dokka:kotlin-as-java-plugin:1.6.0"
}

test {
    useJUnitPlatform()
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions { jvmTarget = "11" }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

detekt {
    buildUponDefaultConfig = true
    allRules = false
    ignoreFailures = true
}

tasks.withType(Detekt).configureEach {
    reports {
        html.required = true // observe findings in your browser with structure and code snippets
        xml.required = true // checkstyle like format mainly for integrations like Jenkins
    }
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
    }
}

task copyDocs(type: Copy, dependsOn: [dokkaGfm]) {
    delete("${projectDir}/../docs/elysianmuse")
    copy {
        from "${buildDir}/dokka/gfm"
        into "${projectDir}/../docs"
    }
}

test.finalizedBy(jacocoTestReport)
test.finalizedBy(copyDocs)

