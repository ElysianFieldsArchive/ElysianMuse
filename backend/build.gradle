plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.5.31'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.5.31'
    id 'io.gitlab.arturbosch.detekt' version '1.18.1'
    id 'jacoco'
    id 'org.jetbrains.dokka' version '1.5.31'
}

group = 'org.darkSolace'
version = '0.0.1-SNAPSHOT'
def spring_version = '2.6.1'
def kotlin_version = '1.6.0'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${spring_version}"
    implementation "org.springframework.boot:spring-boot-starter-security:${spring_version}"
    implementation "org.springframework.boot:spring-boot-starter-web:${spring_version}"
    implementation "org.apache.logging.log4j:log4j-bom:2.15.0"
    developmentOnly "org.springframework.boot:spring-boot-devtools:${spring_version}"
    runtimeOnly "org.postgresql:postgresql:42.3.1"
    runtimeOnly "org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${spring_version}"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${spring_version}"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testImplementation 'org.junit.platform:junit-platform-commons:1.8.2'
    testImplementation 'org.junit.platform:junit-platform-engine:1.8.2'
    testImplementation "org.springframework.security:spring-security-test:5.5.1"
    testImplementation 'org.testcontainers:junit-jupiter:1.16.2'
    testImplementation 'org.testcontainers:postgresql:1.16.2'
    dokkaHtmlPlugin("org.jetbrains.dokka:kotlin-as-java-plugin:1.5.31")
}

test {
    useJUnitPlatform()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions { jvmTarget = "11" }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

detekt {
    buildUponDefaultConfig = true
    allRules = false
    ignoreFailures = true

    reports {
        html.enabled = true // observe findings in your browser with structure and code snippets
        xml.enabled = true // checkstyle like format mainly for integrations like Jenkins
    }
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
}

task copyDocs(type: Copy, dependsOn: [dokkaGfm]) {
    delete("${projectDir}/docs")
    copy {
        from "${buildDir}/dokka/gfm"
        into "${projectDir}/docs"
    }
}

test.finalizedBy(jacocoTestReport)
test.finalizedBy(copyDocs)

