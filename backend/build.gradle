import io.gitlab.arturbosch.detekt.Detekt
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id "org.springframework.boot" version "2.7.0"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "org.jetbrains.kotlin.jvm" version "1.6.21"
    id "org.jetbrains.kotlin.plugin.spring" version "1.6.21"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.6.21"
    id "io.gitlab.arturbosch.detekt" version "1.20.0"
    id "jacoco"
    id "org.jetbrains.dokka" version "1.6.21"
}

apply plugin: "io.spring.dependency-management"

group = "org.darkSolace"
version = "0.0.1-SNAPSHOT"

//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-mail"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    implementation "org.springdoc:springdoc-openapi-ui:1.6.8"

    runtimeOnly "org.postgresql:postgresql"
    runtimeOnly "org.jetbrains.kotlin:kotlin-reflect"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.5"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    developmentOnly "org.springframework.boot:spring-boot-devtools"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.junit.platform:junit-platform-commons"
    testImplementation "org.junit.platform:junit-platform-engine"
    testImplementation "org.testcontainers:junit-jupiter:1.17.1"
    testImplementation "org.testcontainers:postgresql:1.17.1"
    testImplementation "org.apache.httpcomponents:httpclient"
    testImplementation "com.icegreen:greenmail-junit5:1.6.9"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1"
    dokkaHtmlPlugin "org.jetbrains.dokka:kotlin-as-java-plugin"
}

test {
    useJUnitPlatform()
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions { jvmTarget = "11" }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

detekt {
    buildUponDefaultConfig = true
    allRules = false
    ignoreFailures = true
}

tasks.withType(Detekt).configureEach {
    reports {
        html.required = true
        xml.required = true
    }
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
    }
}

task copyDocs(type: Copy, dependsOn: [dokkaGfm]) {
    delete("${projectDir}/../docs/elysianmuse")
    copy {
        from "${buildDir}/dokka/gfm"
        into "${projectDir}/../docs"
    }
}

test.finalizedBy(jacocoTestReport)
test.finalizedBy(copyDocs)

